{-# LANGUAGE UnicodeSyntax, MultiParamTypeClasses #-}

module Todos.Config where

import Control.Monad.Reader

import Todos.Unicode
import Todos.Types
import Todos.Color
import Todos.Shapes
import Text.ParserCombinators.Parsec
import qualified System.Console.ANSI as ANSI

type ListTransformer c = Reader c ([Todo] ‚Üí [Todo])

class QueryConfig c where
  getPredicate ‚à∑ DateTime ‚Üí c ‚Üí (TodoItem ‚Üí ùîπ)
  toBaseConfig ‚à∑ c ‚Üí BaseConfig

data BaseConfig = BConfig {
      outOnlyFirst ‚à∑ ùîπ,           -- ^ Output only first matching entry
      outColors ‚à∑ ùîπ,              -- ^ Show colored output
      outIds :: ùîπ,                -- ^ Show IDs
      outHighlight ‚à∑ ùîπ,           -- ^ Highlight matching items
      sorting ‚à∑ SortingType,      -- ^ How to sort items
      pruneL ‚à∑ Limit, 
      minL   ‚à∑ Limit,
      commandToRun ‚à∑ TodoCommand,
      prefix ‚à∑ Maybe String,      -- ^ Nothing ‚Äî use default parser, Just p ‚Äî use alternate parser with prefix ¬´p¬ª
      descrFormat ‚à∑ String,
      skipStatus ‚à∑ ùîπ,             -- ^ Skip status field in input
      groupByFile ‚à∑ ùîπ,
      groupByTag ‚à∑ ùîπ,
      groupByStatus ‚à∑ ùîπ,
      forcedStatus ‚à∑ Maybe String,
      topStatus ‚à∑ Maybe String
      }
    deriving (Eq, Show)

-- | Runtime configuration. Is read from command line and configs.
data Config = Config {
      baseConfig ‚à∑ BaseConfig,
      query ‚à∑ Composed }
    deriving (Eq,Show)

-- | Configuration for console output. Is generated in runtime from TodosConfig and Config.
data PrintConfig c = PConfig {
  printConfig ‚à∑ c,
  printStatusColor ‚à∑  String ‚Üí (ANSI.ColorIntensity, ANSI.Color),       -- ^ Color of status field from status
  printItemColor ‚à∑  TodoItem ‚Üí Maybe (ANSI.ColorIntensity, ANSI.Color), -- ^ Color of item name
  printHighlightColor ‚à∑ (ANSI.ColorIntensity, ANSI.Color),              -- ^ Color to use for highlighting
  doHighlight ‚à∑ TodoItem ‚Üí ùîπ                                            -- ^ Whether to highlight given item
  }

-- | User Todos config. User can specify it in @~/.config/todos/todos.hs@.
data TodosConfig c = Todos {
     parseCommandLine ‚à∑ DateTime ‚Üí c ‚Üí [String] ‚Üí CmdLineParseResult c,     -- ^ Function to parse command line
     filterTodos ‚à∑ DateTime ‚Üí c ‚Üí [Todo] ‚Üí [Todo],                          -- ^ Any function to be run to transform read TODOs tree
     statusConsoleColor ‚à∑ String ‚Üí (ANSI.ColorIntensity, ANSI.Color),       -- ^ Function to select a color of item's status field in console output
     itemConsoleColor ‚à∑ TodoItem ‚Üí Maybe (ANSI.ColorIntensity, ANSI.Color), -- ^ Function to select a color of item's name in console output
     highlightColor ‚à∑ (ANSI.ColorIntensity, ANSI.Color),                    -- ^ Color to use for highlighting
     itemColor ‚à∑ TodoItem ‚Üí HSV,                                            -- ^ Function to select color for item's node in DOT output
     itemShape ‚à∑ TodoItem ‚Üí Shape,                                          -- ^ Function to select shape for item's node in DOT output
     printTodos ‚à∑ PrintConfig c ‚Üí [Todo] ‚Üí IO (),                           -- ^ Any function to output TODOs list
     nullConfig ‚à∑ c                                                         -- ^ Default Config (to be used without any options in command line and configs)
}

-- | Result of parsing command line
data CmdLineParseResult c = 
     Parsed c [FilePath]       -- ^ Parsed successfully, got Config and list of source files
   | ParseError String         -- ^ Some error occured
   | CmdLineHelp               -- ^ User asked for help
   deriving (Eq,Show)

askBase ‚à∑ (QueryConfig c) ‚áí (BaseConfig ‚Üí a) ‚Üí Reader c a
askBase field = asks (field ‚àò toBaseConfig)

